name: Rust CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --verbose  
      - name: Run tests
        run: cargo test --verbose
      - name: Upload client artifact
        uses: actions/upload-artifact@v3
        with:
          name: client-${{ matrix.os }}
          path: |
            ${{ (matrix.os == 'windows-latest' && 'target/release/client.exe') || 'target/release/client' }}
      - name: Upload server artifact
        uses: actions/upload-artifact@v3
        with:
          name: server-${{ matrix.os }}
          path: |
            ${{ (matrix.os == 'windows-latest' && 'target/release/server.exe') || 'target/release/server' }}

  publish_release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/client-${{ matrix.os }}
          asset_name: client-${{ matrix.os }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/server-${{ matrix.os }}
          asset_name: server-${{ matrix.os }}.zip
          asset_content_type: application/zip