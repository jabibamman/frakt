searchState.loadedDescShard("cli", 0, "An enumeration representing the possible types of command …\nRepresents command line arguments for a client in a CLI …\nRepresents command line arguments for a server in a CLI …\nParse command-line arguments into <code>Self</code>.\nGenerates the <code>Parser</code> implementation.\nOptional: Add a flag to enable/disable debug mode. …\nOptional: Add a flag to enable/disable debug mode. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptional: Add a flag to edit the width and height of the …\nOptional: The hostname of the client. Default: “localhost…\nThe hostname of the server. Default: “localhost”\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional: Add a flag to enable/disable opening the browser.\nParse from <code>std::env::args_os()</code>, exit on error.\nParse from iterator, exit on error.\nOptional: The port number to connect on. Default: 8787\nThe port number the server listens on. Default: 8787\nOptional: Add a flag to save the image to a file. Default: …\nOptional: Add a flag to enable/disable trace mode. …\nOptional: Add a flag to enable/disable trace mode. …\nParse from <code>std::env::args_os()</code>, return Err on error.\nParse from iterator, return Err on error.\nUpdate from iterator, return Err on error.\nUpdate from iterator, exit on error.\nOptional: Add a flag to enable/disable logging. Default: 0\nOptional: Add a flag to enable/disable logging. Default: 0\nOptional: Add a flag to edit the width and height of the …\nOptional: The name of the worker. Default: “worker”")