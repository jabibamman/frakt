searchState.loadedDescShard("shared", 0, "HSL : Hue, Saturation, Lightness\nRGB : Red, Green, Blue\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA <code>Complex</code> number with real (<code>re</code>) and imaginary (<code>im</code>) parts.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nError related to network connection.\nEnum representing various types of errors that can occur …\nError related to image processing.\nError related to Input/Output operations.\nError indicating that a required item was not found.\nGeneric error for other cases.\nError occurring when a path cannot be converted to a …\nError related to data serialization.\nError indicating that a required task was not set.\nError representing an unsupported operation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the types of directories used in the …\nEnumerates the supported image file extensions.\nSpecifies the types of files or entities in a file system.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDescribes parameters specific to a BurningShip fractal.\nGeneral descriptor for a fractal, encompassing different …\nRepresents the type of fractal to be generated.\nDescribes parameters specific to a Mandelbrot fractal.\nDescribes parameters specific to a Julia fractal.\nDescribes parameters specific to a Mandelbrot fractal.\nDescribes parameters specific to a Newton-Raphson z3 …\nDescribes parameters specific to a Newton-Raphson z3 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a request for a fragment of work from a worker.\nRepresents the result of a fragment computation by a …\nDescribes a task assigned to a worker for fractal …\nAn enumeration representing different types of messages in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents data associated with a set of pixels in an …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the intensity of a pixel in fractal rendering, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>PixelIntensity</code> with the specified resolution …\nRepresents a point in a two-dimensional space.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Point</code> with the specified x and y coordinates.\nDefines a rectangular range in a two-dimensional space, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Range</code> with the specified minimum and maximum …\nRepresents the resolution of an image or a grid, defined …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Resolution</code> with the specified number of …\nRepresents a segment of data, typically used for handling …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerates a color based on the provided pixel intensity.\nConvert a color from HSL to RGB\nTente de récupérer une variable d’environnement et de …\nChecks if a given path string represents an existing …\nReturns a <code>PathBuf</code> representing a directory path.\nMaps a <code>FileExtension</code> enum variant to its corresponding …\nGenerates a file path string with a random component in …\nObtains the workspace directory. Typically the current …\nSerializes a <code>FragmentRequest</code> into a JSON string.\nDeserializes a JSON string into a <code>FragmentTask</code>.\nSerializes a <code>FragmentTask</code> into a JSON string.\nReturns the name of a type.")